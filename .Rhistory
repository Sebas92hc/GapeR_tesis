colnames(ctd2) <- c("Date", "Depth", "Data")
ctd2$Date<-as.POSIXct(ctd2$Date, format = "%Y-%m-%d",tz = "GMT")
#ctd2 <- subset(ctd2, ctd2$Date>="2017-04-25" & ctd2$Date<="2018-10-16") #Seleccionar rango de fechas
# No hace falta que cambies el nombre de las columnas, no afecta en nada.
colnames(ctd2) <- c("Date", "Depth", "Data")
# Manually extracted hexidecimal ODV colour palette
#ODV_colours <- c("#feb483", "#d31f2a", "#ffc000", "#27ab19", "#0db5e6", "#7139fe", "#d16cfa")
# pastel, rojo, naranja, verde, azul claro, azul oscuro, morado
#ODV_colours <- c("#0db5e6", "#7139fe", "#d16cfa")
ODV_colours <- rev(brewer.pal(n = 9, name = "Blues"))[1:8]
datosrt <- as.character(ctd2$Date)
ctd2$Date <- as.POSIXct(datosrt, format = "%Y-%m-%d",tz = "GMT")
ctd2$Date <- decimal_date(ctd2$Date)
ctd2 <- na.omit(ctd2)
# Interpolar los datos
ctd_mba <- mba.surf(ctd2, no.X = 300, no.Y = 300, extend = T)
dimnames(ctd_mba$xyz.est$z) <- list(ctd_mba$xyz.est$x, ctd_mba$xyz.est$y)
ctd_mba <- melt(ctd_mba$xyz.est$z, varnames = c('Date', 'Depth'), value.name = 'Data') %>%
filter(Depth < 0) %>%
mutate(Data = round(Data, 1))
#Volvemos a poner la fecha en formato datetime POSIXct para poder dibujarlo
ctd_mba$Date<-date_decimal(ctd_mba$Date, tz = "GMT")
ctd2$Date<-date_decimal(ctd2$Date, tz = "GMT")
#Select a range of depths
ctd_mba2 <- ctd_mba
ctd_mba2$Data <- ctd_mba2$Data/10
#ctd_mba2 <- subset(ctd_mba2, ctd_mba$Depth>=-20 & ctd_mba2$Depth<=-10)
jpng(paste("Multiparametrica Calpe/Figuras/", figname, "OD", sep = ""), P=c(18,9.8) )
brks = c(seq(5.5, 9, 0.5))
#quartz()
ggplot(data = ctd_mba2, aes(x = Date, y = Depth)) +
geom_raster(aes(fill = Data)) +
geom_contour(aes(z = Data), binwidth = 0.5, colour = "gray10", alpha = 0.5) +
geom_text_contour(aes(z = Data), breaks = brks, colour = "black", alpha = 0.6,
check_overlap = TRUE, rotate = TRUE) +
scale_fill_gradientn(colours = rev(ODV_colours), breaks = brks, labels = brks) +
#geom_contour(aes(z = Data), binwidth = 2, colour = "black", alpha = 0.2) +
#geom_contour(aes(z = Data), breaks = 60, colour = "black",alpha = 0.2) +
#geom_contour(aes(z = Data), breaks = 70, colour = "black",alpha = 0.2) +
#geom_contour(aes(z = Data), breaks = 80, colour = "black",alpha = 0.2) +
#geom_contour(aes(z = Data), breaks = 90, colour = "black",alpha = 0.2) +
#geom_contour(aes(z = Data), breaks = 100, colour = "black",alpha = 0.2) +
#geom_text_contour(aes(z = Data))
labs(y = "Profundidad (m)", x = "Mes", fill = "") +
coord_cartesian(expand = 0) +
scale_x_datetime(date_breaks= "2 month", date_label = "%m/%y", date_minor_breaks = "1 month") +
#theme(legend.title.align = 1) +
theme(axis.text = element_text(face="bold", size=14),
#axis.text.x = element_text(angle = 25, vjust = 1.0, hjust = 1.0), # Girar labels axis x
axis.title = element_text(face="bold", size=18),
legend.text = element_text(face="bold", size=16),
legend.title = element_text(face="bold", size=16, angle = 90),
plot.margin=unit(c(0.1,1.3,1,1),"cm"),
axis.title.x = element_text(size = 20, face = "bold", vjust = -4),
axis.title.y = element_text(size = 20, face = "bold", vjust = 3)) +
theme(legend.key.size = unit(1.5, "cm")) + # Tama??o leyenda
scale_y_continuous(breaks = brksdepth, labels = brksdepth) +
guides(fill = guide_colourbar(ticks.colour  = "black", frame.colour = "black", frame.linewidth = 1.5,
title = expression(paste("Oxígeno disuelto (mg ", l^-1,")")), title.position = "right", title.vjust = -1,
title.hjust = 0.5))
{
dev.off()
}
which(ctd2$Date == 2016-11-07)
View(ctd2)
ctd2$Date[411]
class(ctd2$Date[411])
a <- 2016-11-06 23:59:59 GMT
as.POSIXct(2016-11-06 23:59:59 tz = GMT)
?as.POSIXct
as.POSIXct(2016-11-06 23:59:59, format = "%Y-%m-%d %H:%M:%OS" tz = GMT)
as.POSIXct("2016-11-06 23:59:59", format = "%Y-%m-%d %H:%M:%OS" tz = GMT)
as.POSIXct("2016-11-06 23:59:59", tz = GMT)
as.POSIXct("2016-11-06 23:59:59", tz = "GMT")
ctd2$Date == as.POSIXct("2016-11-06 23:59:59", tz = "GMT")
#ctd2$Data[ctd2$Data>90] <- NA
ctd2$Data[ctd2$Date == as.POSIXct("2016-11-06 23:59:59", tz = "GMT")] <- NA
#En el tercer dato, a??ade despues del ctd$ la columna que quieras representar.
ctd2 <- data.frame(ctd$Date, ctd$Depth, ctd$DO*10)
colnames(ctd2) <- c("Date", "Depth", "Data")
ctd2$Date<-as.POSIXct(ctd2$Date, format = "%Y-%m-%d",tz = "GMT")
#ctd2$Data[ctd2$Data>90] <- NA
ctd2$Data[ctd2$Date == as.POSIXct("2016-11-07", tz = "GMT")] <- NA
#ctd2 <- subset(ctd2, ctd2$Date>="2017-04-25" & ctd2$Date<="2018-10-16") #Seleccionar rango de fechas
# No hace falta que cambies el nombre de las columnas, no afecta en nada.
colnames(ctd2) <- c("Date", "Depth", "Data")
# Manually extracted hexidecimal ODV colour palette
#ODV_colours <- c("#feb483", "#d31f2a", "#ffc000", "#27ab19", "#0db5e6", "#7139fe", "#d16cfa")
# pastel, rojo, naranja, verde, azul claro, azul oscuro, morado
#ODV_colours <- c("#0db5e6", "#7139fe", "#d16cfa")
ODV_colours <- rev(brewer.pal(n = 9, name = "Blues"))[1:8]
datosrt <- as.character(ctd2$Date)
ctd2$Date <- as.POSIXct(datosrt, format = "%Y-%m-%d",tz = "GMT")
ctd2$Date <- decimal_date(ctd2$Date)
ctd2 <- na.omit(ctd2)
# Interpolar los datos
ctd_mba <- mba.surf(ctd2, no.X = 300, no.Y = 300, extend = T)
dimnames(ctd_mba$xyz.est$z) <- list(ctd_mba$xyz.est$x, ctd_mba$xyz.est$y)
ctd_mba <- melt(ctd_mba$xyz.est$z, varnames = c('Date', 'Depth'), value.name = 'Data') %>%
filter(Depth < 0) %>%
mutate(Data = round(Data, 1))
#Volvemos a poner la fecha en formato datetime POSIXct para poder dibujarlo
ctd_mba$Date<-date_decimal(ctd_mba$Date, tz = "GMT")
ctd2$Date<-date_decimal(ctd2$Date, tz = "GMT")
#Select a range of depths
ctd_mba2 <- ctd_mba
ctd_mba2$Data <- ctd_mba2$Data/10
#ctd_mba2 <- subset(ctd_mba2, ctd_mba$Depth>=-20 & ctd_mba2$Depth<=-10)
jpng(paste("Multiparametrica Calpe/Figuras/", figname, "OD", sep = ""), P=c(18,9.8) )
brks = c(seq(5.5, 9, 0.5))
#quartz()
ggplot(data = ctd_mba2, aes(x = Date, y = Depth)) +
geom_raster(aes(fill = Data)) +
geom_contour(aes(z = Data), binwidth = 0.5, colour = "gray10", alpha = 0.5) +
geom_text_contour(aes(z = Data), breaks = brks, colour = "black", alpha = 0.6,
check_overlap = TRUE, rotate = TRUE) +
scale_fill_gradientn(colours = rev(ODV_colours), breaks = brks, labels = brks) +
#geom_contour(aes(z = Data), binwidth = 2, colour = "black", alpha = 0.2) +
#geom_contour(aes(z = Data), breaks = 60, colour = "black",alpha = 0.2) +
#geom_contour(aes(z = Data), breaks = 70, colour = "black",alpha = 0.2) +
#geom_contour(aes(z = Data), breaks = 80, colour = "black",alpha = 0.2) +
#geom_contour(aes(z = Data), breaks = 90, colour = "black",alpha = 0.2) +
#geom_contour(aes(z = Data), breaks = 100, colour = "black",alpha = 0.2) +
#geom_text_contour(aes(z = Data))
labs(y = "Profundidad (m)", x = "Mes", fill = "") +
coord_cartesian(expand = 0) +
scale_x_datetime(date_breaks= "2 month", date_label = "%m/%y", date_minor_breaks = "1 month") +
#theme(legend.title.align = 1) +
theme(axis.text = element_text(face="bold", size=14),
#axis.text.x = element_text(angle = 25, vjust = 1.0, hjust = 1.0), # Girar labels axis x
axis.title = element_text(face="bold", size=18),
legend.text = element_text(face="bold", size=16),
legend.title = element_text(face="bold", size=16, angle = 90),
plot.margin=unit(c(0.1,1.3,1,1),"cm"),
axis.title.x = element_text(size = 20, face = "bold", vjust = -4),
axis.title.y = element_text(size = 20, face = "bold", vjust = 3)) +
theme(legend.key.size = unit(1.5, "cm")) + # Tama??o leyenda
scale_y_continuous(breaks = brksdepth, labels = brksdepth) +
guides(fill = guide_colourbar(ticks.colour  = "black", frame.colour = "black", frame.linewidth = 1.5,
title = expression(paste("Oxígeno disuelto (mg ", l^-1,")")), title.position = "right", title.vjust = -1,
title.hjust = 0.5))
{
dev.off()
}
max(ctd2$Data)
ctd <- read.csv("Multiparametrica Calpe/Datos/Datos_0.2metro_EMO_0001.csv", sep = ";", dec = ".")
figname <- "Calpe_EMO_"
brksdepth = c(seq(0, -30, -5))
brksdepth = c(seq(0, -15, -2.5))
ctd <- mutate(ctd, Depth  = -Depth) #Correct for plotting
ctd <- na.omit(ctd)
#En el tercer dato, a??ade despues del ctd$ la columna que quieras representar.
ctd2 <- data.frame(ctd$Date, ctd$Depth, ctd$DO*10)
colnames(ctd2) <- c("Date", "Depth", "Data")
ctd2$Date<-as.POSIXct(ctd2$Date, format = "%Y-%m-%d",tz = "GMT")
#ctd2$Data[ctd2$Data>90] <- NA
ctd2$Data[ctd2$Date == as.POSIXct("2016-11-07", tz = "GMT")] <- NA
#ctd2 <- subset(ctd2, ctd2$Date>="2017-04-25" & ctd2$Date<="2018-10-16") #Seleccionar rango de fechas
# No hace falta que cambies el nombre de las columnas, no afecta en nada.
colnames(ctd2) <- c("Date", "Depth", "Data")
# Manually extracted hexidecimal ODV colour palette
#ODV_colours <- c("#feb483", "#d31f2a", "#ffc000", "#27ab19", "#0db5e6", "#7139fe", "#d16cfa")
# pastel, rojo, naranja, verde, azul claro, azul oscuro, morado
#ODV_colours <- c("#0db5e6", "#7139fe", "#d16cfa")
ODV_colours <- rev(brewer.pal(n = 9, name = "Blues"))[1:8]
datosrt <- as.character(ctd2$Date)
ctd2$Date <- as.POSIXct(datosrt, format = "%Y-%m-%d",tz = "GMT")
ctd2$Date <- decimal_date(ctd2$Date)
ctd2 <- na.omit(ctd2)
# Interpolar los datos
ctd_mba <- mba.surf(ctd2, no.X = 300, no.Y = 300, extend = T)
dimnames(ctd_mba$xyz.est$z) <- list(ctd_mba$xyz.est$x, ctd_mba$xyz.est$y)
ctd_mba <- melt(ctd_mba$xyz.est$z, varnames = c('Date', 'Depth'), value.name = 'Data') %>%
filter(Depth < 0) %>%
mutate(Data = round(Data, 1))
#Volvemos a poner la fecha en formato datetime POSIXct para poder dibujarlo
ctd_mba$Date<-date_decimal(ctd_mba$Date, tz = "GMT")
ctd2$Date<-date_decimal(ctd2$Date, tz = "GMT")
#Select a range of depths
ctd_mba2 <- ctd_mba
ctd_mba2$Data <- ctd_mba2$Data/10
#ctd_mba2 <- subset(ctd_mba2, ctd_mba$Depth>=-20 & ctd_mba2$Depth<=-10)
jpng(paste("Multiparametrica Calpe/Figuras/", figname, "OD", sep = ""), P=c(18,9.8) )
brks = c(seq(5.5, 9, 0.5))
#quartz()
ggplot(data = ctd_mba2, aes(x = Date, y = Depth)) +
geom_raster(aes(fill = Data)) +
geom_contour(aes(z = Data), binwidth = 0.5, colour = "gray10", alpha = 0.5) +
geom_text_contour(aes(z = Data), breaks = brks, colour = "black", alpha = 0.6,
check_overlap = TRUE, rotate = TRUE) +
scale_fill_gradientn(colours = rev(ODV_colours), breaks = brks, labels = brks) +
#geom_contour(aes(z = Data), binwidth = 2, colour = "black", alpha = 0.2) +
#geom_contour(aes(z = Data), breaks = 60, colour = "black",alpha = 0.2) +
#geom_contour(aes(z = Data), breaks = 70, colour = "black",alpha = 0.2) +
#geom_contour(aes(z = Data), breaks = 80, colour = "black",alpha = 0.2) +
#geom_contour(aes(z = Data), breaks = 90, colour = "black",alpha = 0.2) +
#geom_contour(aes(z = Data), breaks = 100, colour = "black",alpha = 0.2) +
#geom_text_contour(aes(z = Data))
labs(y = "Profundidad (m)", x = "Mes", fill = "") +
coord_cartesian(expand = 0) +
scale_x_datetime(date_breaks= "2 month", date_label = "%m/%y", date_minor_breaks = "1 month") +
#theme(legend.title.align = 1) +
theme(axis.text = element_text(face="bold", size=14),
#axis.text.x = element_text(angle = 25, vjust = 1.0, hjust = 1.0), # Girar labels axis x
axis.title = element_text(face="bold", size=18),
legend.text = element_text(face="bold", size=16),
legend.title = element_text(face="bold", size=16, angle = 90),
plot.margin=unit(c(0.1,1.3,1,1),"cm"),
axis.title.x = element_text(size = 20, face = "bold", vjust = -4),
axis.title.y = element_text(size = 20, face = "bold", vjust = 3)) +
theme(legend.key.size = unit(1.5, "cm")) + # Tama??o leyenda
scale_y_continuous(breaks = brksdepth, labels = brksdepth) +
guides(fill = guide_colourbar(ticks.colour  = "black", frame.colour = "black", frame.linewidth = 1.5,
title = expression(paste("Oxígeno disuelto (mg ", l^-1,")")), title.position = "right", title.vjust = -1,
title.hjust = 0.5))
{
dev.off()
}
View(ctd %>%
group_by(Date) %>%
arrange(desc(DO))) %>%
filter(DO>7.99)
View(ctd %>%
group_by(Date) %>%
arrange(desc(DO)))
ctd <- read.csv("Multiparametrica Calpe/Datos/Datos_0.2metro_CONMO_0001.csv", sep = ";", dec = ".")
ctd <- as_tibble(ctd)
ctd$Date <- as.POSIXct(ctd$Date)
View(ctd %>%
group_by(Date) %>%
arrange(desc(DO))) %>%
filter(DO>7.99)
View(ctd %>%
group_by(Date) %>%
arrange((DO))) %>%
filter(DO>7.99)
library(lubridate)
library(RPMG)
library(ez)
library(stats)
source("Experimento alimentacion/Scripts_experimento_alimentacion_rudis/NacrasMar_data.R")
morph <- morph[order(morph$Length),]
fit <- lm(log10(Length) ~ log10(DW), data = morph)
model <- summary(fit)
model
20*0.393
lengthwidth <- data.frame(c(lshellbox$Size, morph$Length), c(wshellbox$Size, morph$Width))
colnames(lengthwidth) <- c("length", "width")
model <- lm(lengthwidth$length ~ lengthwidth$width)
model <- summary(model)
model
library(RPMG)
library(nlme)
source("Growth paper/Read_data_GR.R")
## Plot a color
jpng(paste("Growth paper/Figuras/", "TERESA", sep = ""), P=c(14,9.8) )
quartz()
plot(x=gAll$Age, y=gAll$Freus,bty="l",type="n",ylim=c(0,80),xlab="t (years)",ylab="Size (cm)",cex.axis=1.6,cex.lab=1.4,las=1)
colll= c("seagreen3","blue3","black","cyan","red4","grey","green","purple","red",
"chartreuse4","darkgoldenrod4","darkgoldenrod1", "pink")
whichlwd = 2.5
whichlty = 2
library(RPMG)
library(nlme)
source("Growth paper/Read_data_GR.R")
## Plot a color
jpng(paste("Growth paper/Figuras/", "TERESA", sep = ""), P=c(14,9.8) )
#quartz()
plot(x=gAll$Age, y=gAll$Freus,bty="l",type="n",ylim=c(0,80),xlab="t (years)",ylab="Size (cm)",cex.axis=1.6,cex.lab=1.4,las=1)
colll= c("seagreen3","blue3","black","cyan","red4","grey","green","purple","red",
"chartreuse4","darkgoldenrod4","darkgoldenrod1", "pink")
whichlwd = 2.5
whichlty = 2
colll2= c("red3","gold2","green", "darkgoldenrod4")
lines(gAll$Alfaques[1:15],col="darkgoldenrod4",lwd=whichlwd)
lines(gAll$sheltered_sea[1:38],col=colll2[1],lwd=whichlwd, lty = whichlty)
#lines(gAll$sheltered_sea2,col="purple",lwd=whichlwd, lty = whichlty)
lines(gAll$exposed[1:17],col=colll2[2],lwd=whichlwd, lty = whichlty)
lines(gAll$lagoon[1:12],col=colll2[3],lwd=whichlwd, lty = whichlty)
#lines(gAll$sheltered_shallow_sea,col="deepskyblue",lwd=whichlwd, lty = whichlty)
#lines(gAll$sheltered_deep_sea,col="red3",lwd=whichlwd, lty = whichlty)
legend(20,38.5,legend = c(expression(paste("SO; k=0.17, L", infinity, "=63.1")),
expression(paste("EO; k=0.23, L", infinity, "=43.0")),
expression(paste("LG; k=0.30, L", infinity, "=56.5")),
expression(paste("Alfacs; K=0.18, L", infinity, "=75.0")))
,bty="n",lty=c(2,2,2,1), lwd=whichlwd,cex=1.3 ,col=colll2,text.col=colll2)
{
dev.off()
}
jpng(paste("Growth paper/Figuras/", "TERESA", sep = ""), P=c(14,9.8) )
#quartz()
plot(x=gAll$Age, y=gAll$Freus,bty="l",type="n",ylim=c(0,80),xlab="Tiempo (años)",ylab="Tamaño (cm)",cex.axis=1.6,cex.lab=1.4,las=1)
colll= c("seagreen3","blue3","black","cyan","red4","grey","green","purple","red",
"chartreuse4","darkgoldenrod4","darkgoldenrod1", "pink")
whichlwd = 2.5
whichlty = 2
colll2= c("red3","gold2","green", "darkgoldenrod4")
lines(gAll$Alfaques[1:15],col="darkgoldenrod4",lwd=whichlwd)
lines(gAll$sheltered_sea[1:38],col=colll2[1],lwd=whichlwd, lty = whichlty)
#lines(gAll$sheltered_sea2,col="purple",lwd=whichlwd, lty = whichlty)
lines(gAll$exposed[1:17],col=colll2[2],lwd=whichlwd, lty = whichlty)
lines(gAll$lagoon[1:12],col=colll2[3],lwd=whichlwd, lty = whichlty)
#lines(gAll$sheltered_shallow_sea,col="deepskyblue",lwd=whichlwd, lty = whichlty)
#lines(gAll$sheltered_deep_sea,col="red3",lwd=whichlwd, lty = whichlty)
legend(20,38.5,legend = c(expression(paste("SO; k=0.17, L", infinity, "=63.1")),
expression(paste("EO; k=0.23, L", infinity, "=43.0")),
expression(paste("LG; k=0.30, L", infinity, "=56.5")),
expression(paste("Alfacs; K=0.18, L", infinity, "=75.0")))
,bty="n",lty=c(2,2,2,1), lwd=whichlwd,cex=1.3 ,col=colll2,text.col=colll2)
{
dev.off()
}
library(lubridate)
library(RPMG)
library(ez)
library(stats)
source("Experimento alimentacion/Scripts_experimento_alimentacion_rudis/NacrasMar_data.R")
options(device = "quartz")
jpng(paste("Experimento alimentacion/Figuras/", "Boxplot_lshell_sea_tesis", sep = ""), P=c(14,9.8) )
par(mar=c(8, 6.5, 4.5, 2.5), xpd=TRUE)
boxplot(Size ~ reorder(format(Date, '%d/%m/%y'), lshellbox$Date), data=lshellbox,
ylab="", xlab = "", cex.lab = 2, cex.axis = 1.8, ylim = c(0, 350),
las = 2)
text(x = -0.8, y = -6, labels = paste("Fechas", "dd/mm/aa", sep = "\n"), cex = 2, srt = 45)
mtext(text = "Largo (mm)", side = 2, line = 4, cex = 2)
mtext(text = "Shell length", side = 3, cex = 2.5, font = 2, line = 1)
points(size$Dates, size$mean, col = "black", pch = 16, cex = 1.5)
#text(size$Dates, size$mean + 0.08, labels = size$mean)
arrows(x0 = c(1:numberdata), y0 = size$mean-size$sd,
x1 = c(1:numberdata), y1 = size$mean+size$sd,
code=3, length=0.06, angle = 90, col = "black", lwd = 2)
{
dev.off()
}
jpng(paste("Experimento alimentacion/Figuras/", "Boxplot_lshell_sea_tesis", sep = ""), P=c(14,9.8) )
par(mar=c(8, 6.5, 4.5, 2.5), xpd=TRUE)
boxplot(Size ~ reorder(format(Date, '%d/%m/%y'), lshellbox$Date), data=lshellbox,
ylab="", xlab = "", cex.lab = 2, cex.axis = 1.8, ylim = c(0, 350),
las = 2)
text(x = -0.8, y = -8, labels = paste("Fechas", "dd/mm/aa", sep = "\n"), cex = 2, srt = 45)
mtext(text = "Largo (mm)", side = 2, line = 4, cex = 2)
#mtext(text = "Shell length", side = 3, cex = 2.5, font = 2, line = 1)
points(size$Dates, size$mean, col = "black", pch = 16, cex = 1.5)
#text(size$Dates, size$mean + 0.08, labels = size$mean)
arrows(x0 = c(1:numberdata), y0 = size$mean-size$sd,
x1 = c(1:numberdata), y1 = size$mean+size$sd,
code=3, length=0.06, angle = 90, col = "black", lwd = 2)
{
dev.off()
}
jpng(paste("Experimento alimentacion/Figuras/", "Boxplot_lshell_sea_tesis", sep = ""), P=c(14,9.8) )
par(mar=c(8, 6.5, 4.5, 2.5), xpd=TRUE)
boxplot(Size ~ reorder(format(Date, '%d/%m/%y'), lshellbox$Date), data=lshellbox,
ylab="", xlab = "", cex.lab = 2, cex.axis = 1.8, ylim = c(0, 350),
las = 2)
text(x = -0.8, y = -75, labels = paste("Fechas", "dd/mm/aa", sep = "\n"), cex = 2, srt = 45)
mtext(text = "Largo (mm)", side = 2, line = 4, cex = 2)
#mtext(text = "Shell length", side = 3, cex = 2.5, font = 2, line = 1)
points(size$Dates, size$mean, col = "black", pch = 16, cex = 1.5)
#text(size$Dates, size$mean + 0.08, labels = size$mean)
arrows(x0 = c(1:numberdata), y0 = size$mean-size$sd,
x1 = c(1:numberdata), y1 = size$mean+size$sd,
code=3, length=0.06, angle = 90, col = "black", lwd = 2)
{
dev.off()
}
jpng(paste("Experimento alimentacion/Figuras/", "Boxplot_lshell_sea_tesis", sep = ""), P=c(14,9.8) )
par(mar=c(8, 6.5, 4.5, 2.5), xpd=TRUE)
boxplot(Size ~ reorder(format(Date, '%d/%m/%y'), lshellbox$Date), data=lshellbox,
ylab="", xlab = "", cex.lab = 2, cex.axis = 1.8, ylim = c(0, 350),
las = 2)
text(x = -0.8, y = -50, labels = paste("Fechas", "dd/mm/aa", sep = "\n"), cex = 2, srt = 45)
mtext(text = "Largo (mm)", side = 2, line = 4, cex = 2)
#mtext(text = "Shell length", side = 3, cex = 2.5, font = 2, line = 1)
points(size$Dates, size$mean, col = "black", pch = 16, cex = 1.5)
#text(size$Dates, size$mean + 0.08, labels = size$mean)
arrows(x0 = c(1:numberdata), y0 = size$mean-size$sd,
x1 = c(1:numberdata), y1 = size$mean+size$sd,
code=3, length=0.06, angle = 90, col = "black", lwd = 2)
{
dev.off()
}
jpng(paste("Experimento alimentacion/Figuras/", "Boxplot_lshell_sea_tesis", sep = ""), P=c(14,9.8) )
par(mar=c(8, 6.5, 4.5, 2.5), xpd=TRUE)
boxplot(Size ~ reorder(format(Date, '%d/%m/%y'), lshellbox$Date), data=lshellbox,
ylab="", xlab = "", cex.lab = 2, cex.axis = 1.8, ylim = c(0, 350),
las = 2)
text(x = -10, y = -50, labels = paste("Fechas", "dd/mm/aa", sep = "\n"), cex = 2, srt = 45)
mtext(text = "Largo (mm)", side = 2, line = 4, cex = 2)
#mtext(text = "Shell length", side = 3, cex = 2.5, font = 2, line = 1)
points(size$Dates, size$mean, col = "black", pch = 16, cex = 1.5)
#text(size$Dates, size$mean + 0.08, labels = size$mean)
arrows(x0 = c(1:numberdata), y0 = size$mean-size$sd,
x1 = c(1:numberdata), y1 = size$mean+size$sd,
code=3, length=0.06, angle = 90, col = "black", lwd = 2)
{
dev.off()
}
jpng(paste("Experimento alimentacion/Figuras/", "Boxplot_lshell_sea_tesis", sep = ""), P=c(14,9.8) )
par(mar=c(8, 6.5, 4.5, 2.5), xpd=TRUE)
boxplot(Size ~ reorder(format(Date, '%d/%m/%y'), lshellbox$Date), data=lshellbox,
ylab="", xlab = "", cex.lab = 2, cex.axis = 1.8, ylim = c(0, 350),
las = 2)
text(x = -1.8, y = -50, labels = paste("Fechas", "dd/mm/aa", sep = "\n"), cex = 2, srt = 45)
mtext(text = "Largo (mm)", side = 2, line = 4, cex = 2)
#mtext(text = "Shell length", side = 3, cex = 2.5, font = 2, line = 1)
points(size$Dates, size$mean, col = "black", pch = 16, cex = 1.5)
#text(size$Dates, size$mean + 0.08, labels = size$mean)
arrows(x0 = c(1:numberdata), y0 = size$mean-size$sd,
x1 = c(1:numberdata), y1 = size$mean+size$sd,
code=3, length=0.06, angle = 90, col = "black", lwd = 2)
{
dev.off()
}
jpng(paste("Experimento alimentacion/Figuras/", "Boxplot_lshell_sea_tesis", sep = ""), P=c(14,9.8) )
par(mar=c(8, 6.5, 4.5, 2.5), xpd=TRUE)
boxplot(Size ~ reorder(format(Date, '%d/%m/%y'), lshellbox$Date), data=lshellbox,
ylab="", xlab = "", cex.lab = 2, cex.axis = 1.8, ylim = c(0, 350),
las = 2)
text(x = -1, y = -50, labels = paste("Fechas", "dd/mm/aa", sep = "\n"), cex = 2, srt = 45)
mtext(text = "Largo (mm)", side = 2, line = 4, cex = 2)
#mtext(text = "Shell length", side = 3, cex = 2.5, font = 2, line = 1)
points(size$Dates, size$mean, col = "black", pch = 16, cex = 1.5)
#text(size$Dates, size$mean + 0.08, labels = size$mean)
arrows(x0 = c(1:numberdata), y0 = size$mean-size$sd,
x1 = c(1:numberdata), y1 = size$mean+size$sd,
code=3, length=0.06, angle = 90, col = "black", lwd = 2)
{
dev.off()
}
View(size)
View(size_m)
View(lshellgrowth)
View(wshellgrowth)
sizew_m <- aggregate(Size ~ reorder(format(Date,'%d/%m/%y'), wshellgrowth$Date), wshellgrowth, mean)
colnames(sizew_m) <- c("Dates", "mean")
sizew_sd <- aggregate(Size ~ reorder(format(Date,'%d/%m/%y'), lshellgrowth$Date), lshellgrowth, sd)
colnames(sizew_sd) <- c("Dates", "sd")
sizew2 <- as.numeric(wshell[1,2:41])
sizew2 <- data.frame(as.factor("29/06/18"), mean(sizew2), sd(sizew2))
sizew <- data.frame(sizew_m$Dates, sizew_m$mean, sizew_sd$sd)
colnames(sizew2) <- colnames(sizew)
sizew <- rbind(sizew2, sizew)
View(sizew)
colnames(sizew) <- c("Dates", "mean", "sd")
View(wshellgrowth)
View(size)
View(lshellgrowth)
#width
jpng(paste("Experimento alimentacion/Figuras/", "Boxplot_wshell_sea_tesis", sep = ""), P=c(14,9.8) )
par(mar=c(7, 5, 2.5, 2.5), xpd=TRUE)
boxplot(Size ~ reorder(format(Date, '%d/%m/%y'), wshellbox$Date), data=wshellbox,
ylab="", xlab = "", cex.lab = 2, cex.axis = 1.8, ylim = c(0, 180),
las = 2)
text(x = -1, y = -20, labels = paste("Fechas", "dd/mm/aa", sep = "\n"), cex = 2, srt = 45)
mtext(text = "Ancho (mm)", side = 2, line = 4, cex = 2)
points(sizew$Dates, sizew$mean, col = "black", pch = 16, cex = 1.5)
#text(size$Dates, size$mean + 0.08, labels = size$mean)
arrows(x0 = c(1:numberdata), y0 = sizew$mean-sizew$sd,
x1 = c(1:numberdata), y1 = sizew$mean+sizew$sd,
code=3, length=0.06, angle = 90, col = "black", lwd = 2)
{
dev.off()
}
#width
jpng(paste("Experimento alimentacion/Figuras/", "Boxplot_wshell_sea_tesis", sep = ""), P=c(14,9.8) )
par(mar=c(8, 6.5, 4.5, 2.5), xpd=TRUE)
boxplot(Size ~ reorder(format(Date, '%d/%m/%y'), wshellbox$Date), data=wshellbox,
ylab="", xlab = "", cex.lab = 2, cex.axis = 1.8, ylim = c(0, 180),
las = 2)
text(x = -1, y = -20, labels = paste("Fechas", "dd/mm/aa", sep = "\n"), cex = 2, srt = 45)
mtext(text = "Ancho (mm)", side = 2, line = 4, cex = 2)
points(sizew$Dates, sizew$mean, col = "black", pch = 16, cex = 1.5)
#text(size$Dates, size$mean + 0.08, labels = size$mean)
arrows(x0 = c(1:numberdata), y0 = sizew$mean-sizew$sd,
x1 = c(1:numberdata), y1 = sizew$mean+sizew$sd,
code=3, length=0.06, angle = 90, col = "black", lwd = 2)
{
dev.off()
}
#width
jpng(paste("Experimento alimentacion/Figuras/", "Boxplot_wshell_sea_tesis", sep = ""), P=c(14,9.8) )
par(mar=c(8, 6.5, 4.5, 2.5), xpd=TRUE)
boxplot(Size ~ reorder(format(Date, '%d/%m/%y'), wshellbox$Date), data=wshellbox,
ylab="", xlab = "", cex.lab = 2, cex.axis = 1.8, ylim = c(0, 200),
las = 2)
text(x = -1, y = -30, labels = paste("Fechas", "dd/mm/aa", sep = "\n"), cex = 2, srt = 45)
mtext(text = "Ancho (mm)", side = 2, line = 4, cex = 2)
points(sizew$Dates, sizew$mean, col = "black", pch = 16, cex = 1.5)
#text(size$Dates, size$mean + 0.08, labels = size$mean)
arrows(x0 = c(1:numberdata), y0 = sizew$mean-sizew$sd,
x1 = c(1:numberdata), y1 = sizew$mean+sizew$sd,
code=3, length=0.06, angle = 90, col = "black", lwd = 2)
{
dev.off()
}
ReadData("Datos/Pinna_Activity/Dataindividuals_2s_AVG.txt", "Datos/Pinna_Activity/Datasensors_0001.txt")
source("Funciones/Functions_R_gape/Stadistic.R")
source("Funciones/Functions_R_gape/Colorfunction2.R")
source("Funciones/Functions_R_gape/ReadData.R")
ReadData("Datos/Pinna_Activity/Dataindividuals_2s_AVG.txt", "Datos/Pinna_Activity/Datasensors_0001.txt")
setwd("~/Documents/Oceanografía/R/GapeR_tesis")
ReadData("Datos/Pinna_Activity/Dataindividuals_2s_AVG.txt", "Datos/Pinna_Activity/Datasensors_0001.txt")
View(dataindividuals)
dataindividuals2 <- dataindividuals[1:300000,]
View(dataindividuals2)
write.csv(dataindividuals2, file = "prueba.txt")
ReadData("Datos/Pinna_Activity/prueba.txt", "Datos/Pinna_Activity/Datasensors_0001.txt")
source("Funciones/Functions_R_gape/Stadistic.R")
source("Funciones/Functions_R_gape/Colorfunction2.R")
source("Funciones/Functions_R_gape/ReadData.R")
ReadData("Datos/Pinna_Activity/Dataindividuals_2s_AVG.txt", "Datos/Pinna_Activity/Datasensors_0001.txt")
